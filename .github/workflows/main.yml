name: CI/CD Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Lint
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

  audit:
    name: Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Audit Dependencies
        run: npm audit

# Add additional steps for pushing Docker images and deploying to AppRunner if needed.

  docker-build-and-push:
    name: Docker push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
        # Make sure you've added the DOCKERHUB_USERNAME and DOCKERHUB_TOKEN as repository secrets.

      - name: Build and Push Docker Compose Services
        run: docker-compose -f docker-compose.yml build
        # This command builds the services defined in your docker-compose.yml.

      - name: Push Docker Compose Services
        run: docker-compose -f docker-compose.yml push
        # This command pushes the built images to Docker Hub.